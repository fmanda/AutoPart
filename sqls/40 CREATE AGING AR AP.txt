CREATE FUNCTION FN_AR_AGING(
	@REFDATE DATE
)RETURNS TABLE
AS RETURN
SELECT A.INVOICENO, A.CUSTOMER, A.ALAMAT, 
CASE WHEN ISNULL(A.SALESMAN,'') ='' THEN 'UNKNOWN' ELSE A.SALESMAN END AS SALESMAN, A.TRANSDATE, 
A.DUEDATE, A.AMOUNT, A.PAIDAMT, A.RETURAMT, A.REMAIN, A.OVERDUE,
CASE WHEN OVERDUE <= 0 THEN REMAIN ELSE 0 END AS [CURRENT],
CASE WHEN OVERDUE BETWEEN 1 AND 30 THEN REMAIN ELSE 0 END AS RANGE1,
CASE WHEN OVERDUE BETWEEN 31 AND 60 THEN REMAIN ELSE 0 END AS RANGE2,
CASE WHEN OVERDUE BETWEEN 61 AND 90 THEN REMAIN ELSE 0 END AS RANGE3,
CASE WHEN OVERDUE >90 THEN REMAIN ELSE 0 END AS RANGE4
FROM FN_AR_OUTSTANDING(@REFDATE) A
GO


ALTER FUNCTION FN_AP_AGING(
	@REFDATE DATE
)RETURNS TABLE
AS RETURN
SELECT A.INVOICENO, A.REFERENSI, A.SUPPLIER, A.TRANSDATE, 
A.DUEDATE, A.AMOUNT, A.PAIDAMT, A.RETURAMT, A.REMAIN, A.OVERDUE,
CASE WHEN OVERDUE <= 0 THEN REMAIN ELSE 0 END AS [CURRENT],
CASE WHEN OVERDUE BETWEEN 1 AND 30 THEN REMAIN ELSE 0 END AS RANGE1,
CASE WHEN OVERDUE BETWEEN 31 AND 60 THEN REMAIN ELSE 0 END AS RANGE2,
CASE WHEN OVERDUE BETWEEN 61 AND 90 THEN REMAIN ELSE 0 END AS RANGE3,
CASE WHEN OVERDUE >90 THEN REMAIN ELSE 0 END AS RANGE4
FROM FN_AP_OUTSTANDING(@REFDATE) A
GO



