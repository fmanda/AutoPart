CREATE FUNCTION FN_PIUTANG_RETUR(	
	@REFDATE DATE
)RETURNS @RESULT TABLE(
	SALESRETUR_ID INT,
	REFNO VARCHAR(30),
	CUSTOMER VARCHAR(100),
	ALAMAT VARCHAR(200),
	TRANSDATE DATE,	
	AMOUNT FLOAT,
	PAIDAMT FLOAT,
	REMAIN FLOAT,
	HEADERREMAIN FLOAT
) AS
BEGIN
	INSERT INTO @RESULT(SALESRETUR_ID, REFNO, CUSTOMER, ALAMAT,  TRANSDATE, AMOUNT, PAIDAMT, REMAIN,  HEADERREMAIN)
	SELECT A.ID, A.REFNO, C.NAMA , C.ALAMAT, A.TRANSDATE, A.AMOUNT, 
	SUM(ISNULL(B.RETURAMT,0)) AS PAIDAMT, 	A.AMOUNT - SUM(ISNULL(B.RETURAMT,0)) AS REMAIN,
	(A.AMOUNT - A.PAIDAMOUNT) AS HEADERREMAIN
	FROM TSALESRETUR A
	LEFT JOIN TFINANCIALTRANSACTION B ON A.ID = B.SALESRETUR_ID
	AND B.TRANSDATE <= @REFDATE
	LEFT JOIN TCUSTOMER C ON A.CUSTOMER_ID = C.ID
	WHERE A.TRANSDATE <= @REFDATE AND
	(ISNULL(A.PAIDOFF,0) = 0 AND ISNULL(A.PAIDOFFDATE,DATEADD(DAY, 0, 0)) <= @REFDATE)
	GROUP BY  A.ID, A.REFNO, C.NAMA , C.ALAMAT, A.AMOUNT, A.TRANSDATE, A.PAIDAMOUNT
	RETURN
END
GO


CREATE FUNCTION FN_HUTANG_RETUR(	
	@REFDATE DATE
)RETURNS @RESULT TABLE(
	PURCHASERETUR_ID INT,
	REFNO VARCHAR(30),
	SUPPLIER VARCHAR(100),
	ALAMAT VARCHAR(200),
	TRANSDATE DATE,	
	AMOUNT FLOAT,
	PAIDAMT FLOAT,
	REMAIN FLOAT,
	HEADERREMAIN FLOAT
) AS
BEGIN
	INSERT INTO @RESULT(PURCHASERETUR_ID, REFNO, SUPPLIER, ALAMAT,  TRANSDATE, AMOUNT, PAIDAMT, REMAIN,  HEADERREMAIN)
	SELECT A.ID, A.REFNO, C.NAMA , C.ALAMAT, A.TRANSDATE, A.AMOUNT, 
	SUM(ISNULL(B.RETURAMT,0)) AS PAIDAMT, 	A.AMOUNT - SUM(ISNULL(B.RETURAMT,0)) AS REMAIN,
	(A.AMOUNT - A.PAIDAMOUNT) AS HEADERREMAIN
	FROM TPURCHASERETUR A
	LEFT JOIN TFINANCIALTRANSACTION B ON A.ID = B.PURCHASERETUR_ID
	AND B.TRANSDATE <= @REFDATE
	LEFT JOIN TSUPPLIER C ON A.SUPPLIER_ID = C.ID
	WHERE A.TRANSDATE <= @REFDATE AND
	(ISNULL(A.PAIDOFF,0) = 0 AND ISNULL(A.PAIDOFFDATE,DATEADD(DAY, 0, 0)) <= @REFDATE)
	GROUP BY  A.ID, A.REFNO, C.NAMA , C.ALAMAT, A.AMOUNT, A.TRANSDATE, A.PAIDAMOUNT
	RETURN
END
GO




