CREATE FUNCTION FN_SLIP_SALESINVOICE(
	@SALESINVID INT
)RETURNS TABLE
AS RETURN
SELECT A.ID, A.INVOICENO, A.TRANSDATE, A.DUEDATE, 
(A.AMOUNT - A.PPN) AS SUBTOTAL, A.PPN, A.AMOUNT, A.NOTES, 
A.MODIFIEDBY, A.MODIFIEDDATE, B.NAMA AS CUSTOMER, B.ALAMAT AS ALAMAT,
C.NAMA AS SALESMAN, E.NAMA AS WAREHOUSE, D.NAMA AS MEKANIK, DET.*
FROM TSALESINVOICE A
INNER JOIN TCUSTOMER B ON A.CUSTOMER_ID = B.ID
LEFT JOIN TSALESMAN C ON A.SALESMAN_ID = C.ID
LEFT JOIN TMEKANIK D ON A.MEKANIK_ID = D.ID
LEFT JOIN TWAREHOUSE E ON A.WAREHOUSE_ID = E.ID
INNER JOIN
(
	SELECT A.ID AS SALESINVOICE_ID, C.KODE, C.NAMA, D.UOM, ABS(B.QTY) AS QTY, B.HARGA, B.DISCOUNT,
	ABS(B.QTY)*(B.HARGA-B.DISCOUNT) AS LINETOTAL
	FROM TSALESINVOICE A
	INNER JOIN TTRANSDETAIL B ON A.ID = B.HEADER_ID AND B.HEADER_FLAG = 200
	INNER JOIN TITEM C ON C.ID = B.ITEM_ID 
	INNER JOIN TUOM D ON D.ID = B.UOM_ID
	WHERE A.ID = @SALESINVID
	UNION ALL
	SELECT A.ID AS SALESINVOICE_ID, C.KODE, C.NAMA, D.UOM, ABS(B.QTY) AS QTY, B.HARGA, B.DISCOUNT,
	ABS(B.QTY)*(B.HARGA-B.DISCOUNT) AS LINETOTAL
	FROM TSALESINVOICE A
	INNER JOIN TSERVICEDETAIL B ON A.ID = B.SALESINVOICE_ID
	LEFT JOIN TSERVICE C ON C.ID = B.SERVICE_ID
	LEFT JOIN TUOM D ON D.ID = C.UOM_ID
	WHERE A.ID = @SALESINVID
) AS DET ON DET.SALESINVOICE_ID = A.ID
WHERE A.ID = @SALESINVID