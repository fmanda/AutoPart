CREATE FUNCTION FN_SUGGESTIONORDER(
	@ENDDATE DATE,
	@NUMDAY INT
) RETURNS TABLE
AS

	--DECLARE @NUMDAY INT = 90;
	--DECLARE @ENDDATE DATE = GETDATE();

	RETURN 		
		SELECT R.ITEM_ID, IT.KODE, IT.NAMA, U.UOM, IG.NAMA AS GROUPITEM, IM.NAMA AS MERK, IT.LEADTIME,
		SUM(R.ADS)/IU.KONVERSI AS ADS, 2 * IT.LEADTIME * SUM(R.ADS)/IU.KONVERSI AS ROP, SUM(R.STOCK)/IU.KONVERSI AS STOCK,
		CASE WHEN (SUM(R.ADS)/IU.KONVERSI) > 0 THEN
		(SUM(R.STOCK)/IU.KONVERSI) / (SUM(R.ADS)/IU.KONVERSI) ELSE 0 END  AS STOCKCOVER
		FROM 
		(
			SELECT A.ITEM_ID, ABS(SUM(A.QTY*A.KONVERSI))/@NUMDAY AS ADS, 0 AS STOCK
			FROM TTRANSDETAIL A
			WHERE A.QTY < 0  --AND A.HEADER_FLAG = 200
			AND A.TRANSDATE BETWEEN DATEADD(DAY, (-1 * @NUMDAY), @ENDDATE) AND @ENDDATE
			GROUP BY A.ITEM_ID
			UNION ALL
			SELECT ITEM_ID, 0 AS ADS, SUM(QTYPCS) AS STOCK 
			FROM FN_STOCK(@ENDDATE)
			GROUP BY ITEM_ID
		) AS R
		INNER JOIN TITEM IT ON R.ITEM_ID = IT.ID
		INNER JOIN TITEMUOM IU ON IU.ITEM_ID = IT.ID AND IU.UOM_ID = IT.STOCKUOM_ID
		INNER JOIN TUOM U ON IT.STOCKUOM_ID = U.ID
		LEFT JOIN TITEMGROUP IG ON IG.ID = IT.GROUP_ID
		LEFT JOIN TITEMGROUP IM ON IM.ID = IT.MERK_ID
		GROUP BY  R.ITEM_ID, IU.KONVERSI, IT.LEADTIME, IG.NAMA, IM.NAMA,
		IT.KODE, IT.NAMA, U.UOM
	
