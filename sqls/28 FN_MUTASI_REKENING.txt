CREATE FUNCTION [dbo].[FN_SALDO_REKENING](		
	@ENDDATE DATE,
	@REKENING_ID INT
)RETURNS @RESULT TABLE(
	REKENING_ID INT,
	DEBET FLOAT,
	CREDIT FLOAT,
	BALANCE FLOAT
) AS
BEGIN
	DECLARE @STARTDATE DATE = DATEADD(yy, DATEDIFF(yy, 0, @ENDDATE), 0)
	INSERT @RESULT(REKENING_ID, DEBET, CREDIT, BALANCE)
	SELECT B.ID , SUM(ISNULL(A.DEBETAMT,0)) AS DEBET,
	SUM(ISNULL(A.CREDITAMT,0)) AS DEBET,
	SUM(ISNULL(A.DEBETAMT,0)-ISNULL(A.CREDITAMT,0)) AS BALANCE
	FROM TREKENING B
	LEFT JOIN TFINANCIALTRANSACTION A ON A.REKENING_ID = B.ID
	WHERE A.TRANSDATE BETWEEN @STARTDATE AND @ENDDATE
	AND (B.ID = @REKENING_ID  OR @REKENING_ID=0 )
	GROUP BY B.ID
	RETURN
END
GO




CREATE FUNCTION [dbo].[FN_MUTASI_REKENING](
	@REKENING_ID INT,
	@TGLAWAL DATE,
	@TGLAKHIR DATE
)RETURNS @RESULT TABLE(	
	TRANSDATE DATE,
	REKENING_ID INT,
	DEBET FLOAT,
	CREDIT FLOAT,	
	HEADER_ID INT,
	HEADER_FLAG INT ,
	REFNO VARCHAR(30),
	NOTES VARCHAR(300)
) AS
BEGIN
	DECLARE @SALDOAKHIRDATE DATE = DATEADD(DAY,- 1, @TGLAWAL);

	INSERT INTO @RESULT(TRANSDATE, REKENING_ID, DEBET, CREDIT, NOTES)
	SELECT @TGLAWAL, REKENING_ID, SUM(DEBET-CREDIT),0, 'Saldo Awal : ' + CONVERT(varchar, @TGLAWAL, 23)
	FROM FN_SALDO_REKENING(@SALDOAKHIRDATE, @REKENING_ID)
	GROUP BY REKENING_ID

	--MUTASI
	INSERT INTO @RESULT(TRANSDATE, REKENING_ID, DEBET, CREDIT, HEADER_ID, HEADER_FLAG, REFNO, NOTES)
	SELECT A.TRANSDATE, A.REKENING_ID, (ISNULL(A.DEBETAMT,0)), 
	(ISNULL(A.CREDITAMT,0)), A.HEADER_ID, A.HEADER_FLAG, A.REFNO, A.NOTES
	FROM TFINANCIALTRANSACTION A	
	WHERE A.REKENING_ID = @REKENING_ID	
	AND A.TRANSDATE BETWEEN @TGLAWAL AND @TGLAKHIR
	
	RETURN

END
